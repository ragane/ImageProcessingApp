# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
import cv2, imutils
from Transcription import *


class Ui_MainWindow(QtWidgets.QWidget):

    def setupUi(self, MainWindow):

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1300, 680)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(11, 11, 621, 911))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("../__PRZENOSINY/ImageTun/gray-color-solid-background-1920x1080.png"))
        self.label.setObjectName("label")
        self.ImageProcessingBox = QtWidgets.QGroupBox(self.centralwidget)
        self.ImageProcessingBox.setGeometry(QtCore.QRect(644, 11, 626, 899))
        self.ImageProcessingBox.setObjectName("ImageProcessingBox")
        self.Histogram = QtWidgets.QOpenGLWidget(self.ImageProcessingBox)
        self.Histogram.setGeometry(QtCore.QRect(20, 460, 300, 200))
        self.Histogram.setObjectName("Histogram")
        self.layoutWidget = QtWidgets.QWidget(self.ImageProcessingBox)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 20, 611, 141))
        self.layoutWidget.setObjectName("layoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.layoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.BrightBluarLayout = QtWidgets.QGridLayout()
        self.BrightBluarLayout.setObjectName("BrightBluarLayout")
        self.BrightnessBox = QtWidgets.QGroupBox(self.layoutWidget)
        self.BrightnessBox.setObjectName("BrightnessBox")
        self.BrightnessSlider = QtWidgets.QSlider(self.BrightnessBox)
        self.BrightnessSlider.setGeometry(QtCore.QRect(12, 29, 281, 16))
        self.BrightnessSlider.setCursor(QtGui.QCursor(QtCore.Qt.ClosedHandCursor))
        self.BrightnessSlider.setOrientation(QtCore.Qt.Horizontal)
        self.BrightnessSlider.setObjectName("BrightnessSlider")
        self.BrightBluarLayout.addWidget(self.BrightnessBox, 0, 0, 1, 1)
        self.BlurationBox = QtWidgets.QGroupBox(self.layoutWidget)
        self.BlurationBox.setObjectName("BlurationBox")
        self.BlurationSlider = QtWidgets.QSlider(self.BlurationBox)
        self.BlurationSlider.setGeometry(QtCore.QRect(12, 29, 281, 16))
        self.BlurationSlider.setCursor(QtGui.QCursor(QtCore.Qt.ClosedHandCursor))
        self.BlurationSlider.setOrientation(QtCore.Qt.Horizontal)
        self.BlurationSlider.setObjectName("BlurationSlider")
        self.BrightBluarLayout.addWidget(self.BlurationBox, 0, 1, 1, 1)
        self.gridLayout.addLayout(self.BrightBluarLayout, 0, 0, 1, 1)

        self.GeoColorLayout = QtWidgets.QGridLayout()
        self.GeoColorLayout.setObjectName("GeoColorLayout")
        self.GeometricLayout = QtWidgets.QGridLayout()
        self.GeometricLayout.setObjectName("GeometricLayout")
        self.GeometriLabel = QtWidgets.QLabel(self.layoutWidget)
        self.GeometriLabel.setObjectName("GeometriLabel")
        self.GeometricLayout.addWidget(self.GeometriLabel, 0, 0, 1, 1)
        self.GeometricBox = QtWidgets.QComboBox(self.layoutWidget)
        self.GeometricBox.setEnabled(True)
        self.GeometricBox.setCursor(QtGui.QCursor(QtCore.Qt.ClosedHandCursor))
        self.GeometricBox.setEditable(False)

        GeometricList = ["Scalling", "Translation", "Rotation", "Perspective Transformation"]
        self.GeometricBox.addItems(GeometricList)
        self.GeometricBox.setObjectName("GeometricBox")

        self.GeometricLayout.addWidget(self.GeometricBox, 0, 1, 1, 1)
        self.GeoColorLayout.addLayout(self.GeometricLayout, 0, 0, 1, 1)
        self.ColorLayout = QtWidgets.QGridLayout()
        self.ColorLayout.setObjectName("ColorLayout")
        self.ColorBox = QtWidgets.QComboBox(self.layoutWidget)
        self.ColorBox.setEnabled(True)
        self.ColorBox.setCursor(QtGui.QCursor(QtCore.Qt.ClosedHandCursor))
        self.ColorBox.setEditable(False)
        self.ColorBox.setObjectName("ColorBox")
        self.ColorBox.addItem("")
        self.ColorBox.addItem("")
        self.ColorLayout.addWidget(self.ColorBox, 0, 1, 1, 1)
        self.ColorLabel = QtWidgets.QLabel(self.layoutWidget)
        self.ColorLabel.setObjectName("ColorLabel")
        self.ColorLayout.addWidget(self.ColorLabel, 0, 0, 1, 1)
        self.GeoColorLayout.addLayout(self.ColorLayout, 0, 1, 1, 1)
        self.gridLayout.addLayout(self.GeoColorLayout, 1, 0, 1, 1)
        self.layoutWidget1 = QtWidgets.QWidget(self.ImageProcessingBox)
        self.layoutWidget1.setGeometry(QtCore.QRect(10, 170, 221, 24))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.layoutWidget1)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_2 = QtWidgets.QLabel(self.layoutWidget1)
        self.label_2.setObjectName("label_2")
        self.gridLayout_2.addWidget(self.label_2, 0, 0, 1, 1)
        self.comboBox = QtWidgets.QComboBox(self.layoutWidget1)
        self.comboBox.setCursor(QtGui.QCursor(QtCore.Qt.ClosedHandCursor))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.gridLayout_2.addWidget(self.comboBox, 0, 1, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.FileMenu = QtWidgets.QMenuBar(MainWindow)
        self.FileMenu.setGeometry(QtCore.QRect(0, 0, 1300, 21))
        self.FileMenu.setObjectName("FileMenu")
        self.menuFile = QtWidgets.QMenu(self.FileMenu)
        self.menuFile.setObjectName("menuFile")
        self.menuHelp = QtWidgets.QMenu(self.FileMenu)
        self.menuHelp.setTearOffEnabled(False)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("help_icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuHelp.setIcon(icon)
        self.menuHelp.setToolTipsVisible(False)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.FileMenu)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionSave_as = QtWidgets.QAction(MainWindow)
        self.actionSave_as.setObjectName("actionSave_as")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionColor = QtWidgets.QAction(MainWindow)
        self.actionColor.setObjectName("actionColor")
        self.actionBlur = QtWidgets.QAction(MainWindow)
        self.actionBlur.setObjectName("actionBlur")
        self.actionBrightnes = QtWidgets.QAction(MainWindow)
        self.actionBrightnes.setObjectName("actionBrightnes")
        self.actionThresholding = QtWidgets.QAction(MainWindow)
        self.actionThresholding.setObjectName("actionThresholding")
        self.actionGeometric = QtWidgets.QAction(MainWindow)
        self.actionGeometric.setObjectName("actionGeometric")
        self.actionLaplacian = QtWidgets.QAction(MainWindow)
        self.actionLaplacian.setObjectName("actionLaplacian")
        self.actionScharr = QtWidgets.QAction(MainWindow)
        self.actionScharr.setObjectName("actionScharr")
        self.actionSobel = QtWidgets.QAction(MainWindow)
        self.actionSobel.setObjectName("actionSobel")
        self.actionCanny = QtWidgets.QAction(MainWindow)
        self.actionCanny.setObjectName("actionCanny")
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_as)
        self.menuFile.addAction(self.actionExit)
        self.FileMenu.addAction(self.menuFile.menuAction())
        self.FileMenu.addAction(self.menuHelp.menuAction())



        self.retranslateUi(MainWindow)
        self.BrightnessSlider.valueChanged['int'].connect(self.BrightValue) # type: ignore
        self.BlurationSlider.valueChanged['int'].connect(self.BlurValue) # type: ignore
        self.actionOpen.triggered.connect(self.loadImage) # type: ignore
        self.actionSave.triggered.connect(self.saveImage) # type: ignore
        self.actionSave_as.triggered.connect(self.saveAsImage) # type: ignore
        self.actionExit.triggered.connect(self.CloseApp) # type: ignore
        self.GeometricBox.activated.connect(self.ActionGeometricBox)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # variables for image location and info from img
        self.filename = None
        self.tmp = None
        self.brightness_val_now = 0
        self.blur_val_now = 0

    def loadImage(self):
        self.filename = QtWidgets.QFileDialog.getOpenFileName(filter = " (*.jpg *.png)")[0]
        self.image = cv2.imread(self.filename)
        self.setImage(self.image)
        print("Loaded image: ", self.filename)

    def setImage(self, image):
        self.tmp = image
        image = imutils.resize(image, 600, 500)
        frame = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
        image = QtGui.QImage(frame, frame.shape[1], frame.shape[0], frame.strides[0], QtGui.QImage.Format_RGB888)
        self.label.setPixmap(QtGui.QPixmap.fromImage(image))

    def saveImage(self):
        cv2.imwrite(self.filename, self.image)
        print("Saved: ", self.filename)

    def saveAsImage(self):
        self.saveName = QtWidgets.QFileDialog.getSaveFileName(self, "Save file", self.filename, "(*.jpg *.png)")[0]
        cv2.imwrite(self.saveName, self.image)
        print("Saved as: ", self.saveName)

    def CloseApp(self):
        print("Application is being closed.")
        app.quit()

    def BrightValue(self, value):
        self.brightness_val_now = value
        print("Brightness value is: ", value)
        self.UpdateImg()

    def BlurValue(self, value):
        self.blur_val_now = value
        print("Bluration value is: ", value)
        self.UpdateImg()

    def SetBrightValue(self, image, value):
        hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)
        h, s, v = cv2.split(hsv)
        lim = 255 - value
        v[v > lim] = 255
        v[v <= lim] += value

        outHSV = cv2.merge((h,s, v))
        image = cv2.cvtColor(outHSV, cv2.COLOR_HSV2BGR)
        return image

    def SetBlurValue(self, image, value):
        kernel_size = (value + 1, value + 1)
        image = cv2.blur(image, kernel_size)
        return image

    def UpdateImg(self):
        image = self.SetBrightValue(self.image, self.brightness_val_now)
        image = self.SetBlurValue(image, self.blur_val_now)

        self.setImage(image)

    def ActionGeometricBox(self, index):

        ctext = self.GeometricBox.itemText(index)
        if ctext == "Scalling":
            self.image = Scalling.ScaleImg(self, self.image, 2, 2, cv2.INTER_LINEAR)  # it will be with value_x / value_y
            self.setImage(self.image)
        elif ctext =="Translation":
            self.image = Translation.MoveImg(self, self.image, -100, 200)  # it will be with value_x value_y
            self.setImage(self.image)
        elif ctext == "Rotation":
            self.image = Rotation.RotateImg(self, self.image, 90, 1)
            self.setImage(self.image)
        else:
            print("Perspective Transform")
            self.image = PerspectiveTrans.GetPerspective(self, self.image)
            self.setImage(self.image)


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))

        self.ImageProcessingBox.setTitle(_translate("MainWindow", "Image Processing"))

        self.BrightnessBox.setTitle(_translate("MainWindow", "Brightness"))

        self.BlurationBox.setTitle(_translate("MainWindow", "Bluration"))

        self.GeometriLabel.setText(_translate("MainWindow", "Geometric"))
        self.GeometricBox.setCurrentText(_translate("MainWindow", "Scalling"))
        self.GeometricBox.setItemText(0, _translate("MainWindow", "Scalling"))
        self.GeometricBox.setItemText(1, _translate("MainWindow", "Translation"))
        self.GeometricBox.setItemText(2, _translate("MainWindow", "Rotation"))
        self.GeometricBox.setItemText(3, _translate("MainWindow", "Perspective transformation"))

        self.ColorBox.setCurrentText(_translate("MainWindow", "cvtColor"))
        self.ColorBox.setItemText(0, _translate("MainWindow", "cvtColor"))
        self.ColorBox.setItemText(1, _translate("MainWindow", "inRange"))
        self.ColorLabel.setText(_translate("MainWindow", "Color"))

        self.label_2.setText(_translate("MainWindow", "Morphological Transformation"))
        self.comboBox.setItemText(0, _translate("MainWindow", "Erosion"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Dilation"))
        self.comboBox.setItemText(2, _translate("MainWindow", "Opening"))
        self.comboBox.setItemText(3, _translate("MainWindow", "Closing"))

        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionOpen.setText(_translate("MainWindow", "Open..."))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSave_as.setText(_translate("MainWindow", "Save as..."))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setShortcut(_translate("MainWindow", "Ctrl+Q"))

        self.actionColor.setText(_translate("MainWindow", "Color"))

        self.actionBlur.setText(_translate("MainWindow", "Blur"))

        self.actionBrightnes.setText(_translate("MainWindow", "Brightnes"))

        self.actionThresholding.setText(_translate("MainWindow", "Thresholding"))
        self.actionGeometric.setText(_translate("MainWindow", "Geometric"))
        self.actionLaplacian.setText(_translate("MainWindow", "Laplacian"))
        self.actionScharr.setText(_translate("MainWindow", "Scharr"))
        self.actionSobel.setText(_translate("MainWindow", "Sobel"))
        self.actionCanny.setText(_translate("MainWindow", "Canny"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
